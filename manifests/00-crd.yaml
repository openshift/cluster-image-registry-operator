apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: configs.imageregistry.operator.openshift.io
spec:
  group: imageregistry.operator.openshift.io
  scope: Cluster
  version: v1
  names:
    kind: Config
    listKind: ConfigList
    plural: configs
    singular: config
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Config is the configuration object for a registry instance managed
        by the registry operator
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            defaultRoute:
              description: DefaultRoute indicates whether an external facing route
                for the registry should be created using the default generated hostname.
              type: boolean
            disableRedirect:
              description: DisableRedirect controls whether to route all data through
                the Registry, rather than redirecting to the backend.
              type: boolean
            httpSecret:
              description: HTTPSecret is the value needed by the registry to secure
                uploads, generated by default.
              type: string
            logging:
              description: LogLevel determines the level of logging enabled in the
                registry.
              format: int64
              type: integer
            managementState:
              description: ManagementState indicates whether the registry instance
                represented by this config instance is under operator management or
                not.  Valid values are Managed, Unmanaged, and Removed.
              pattern: ^(Managed|Unmanaged|Force|Removed)$
              type: string
            nodeSelector:
              additionalProperties:
                type: string
              description: NodeSelector defines the node selection constraints for
                the registry pod.
              type: object
            proxy:
              description: Proxy defines the proxy to be used when calling master
                api, upstream registries, etc.
              properties:
                http:
                  type: string
                https:
                  type: string
                noProxy:
                  type: string
              type: object
            readOnly:
              description: ReadOnly indicates whether the registry instance should
                reject attempts to push new images or delete existing ones.
              type: boolean
            replicas:
              description: Replicas determines the number of registry instances to
                run.
              format: int32
              type: integer
            requests:
              description: Requests controls how many parallel requests a given registry
                instance will handle before queuing additional requests.
              properties:
                read:
                  properties:
                    maxInQueue:
                      description: MaxInQueue sets the maximum queued api requests
                        to the registry.
                      type: integer
                    maxRunning:
                      description: MaxRunning sets the maximum in flight api requests
                        to the registry.
                      type: integer
                    maxWaitInQueue:
                      description: MaxWaitInQueue sets the maximum time a request
                        can wait in the queue before being rejected.
                      type: string
                  type: object
                write:
                  properties:
                    maxInQueue:
                      description: MaxInQueue sets the maximum queued api requests
                        to the registry.
                      type: integer
                    maxRunning:
                      description: MaxRunning sets the maximum in flight api requests
                        to the registry.
                      type: integer
                    maxWaitInQueue:
                      description: MaxWaitInQueue sets the maximum time a request
                        can wait in the queue before being rejected.
                      type: string
                  type: object
              type: object
            resources:
              description: Resources defines the resource requests+limits for the
                registry pod.
              properties:
                limits:
                  additionalProperties:
                    type: string
                  description: 'Limits describes the maximum amount of compute resources
                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                requests:
                  additionalProperties:
                    type: string
                  description: 'Requests describes the minimum amount of compute resources
                    required. If Requests is omitted for a container, it defaults
                    to Limits if that is explicitly specified, otherwise to an implementation-defined
                    value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
              type: object
            routes:
              description: Routes defines additional external facing routes which
                should be created for the registry.
              items:
                properties:
                  hostname:
                    description: Hostname for the route.
                    type: string
                  name:
                    description: Name of the route to be created.
                    type: string
                  secretName:
                    description: SecretName points to secret containing the certificates
                      to be used by the route.
                    type: string
                required:
                - name
                type: object
              type: array
            storage:
              description: Storage details for configuring registry storage, e.g.
                S3 bucket coordinates.
              properties:
                azure:
                  description: Azure represents configuration that uses Azure Blob
                    Storage.
                  properties:
                    accountName:
                      type: string
                    container:
                      type: string
                  type: object
                emptyDir:
                  description: EmptyDir represents ephemeral storage on the pod's
                    host node. This storage cannot be used with more than 1 replica
                    and is not suitable for production use. When the pod is removed
                    from a node for any reason, the data in the emptyDir is deleted
                    forever. This configuration is EXPERIMENTAL and is subject to
                    change without notice.
                  type: object
                gcs:
                  description: GCS represents configuration that uses Google Cloud
                    Storage.
                  properties:
                    bucket:
                      description: Bucket is the bucket name in which you want to
                        store the registry's data. Optional, will be generated if
                        not provided.
                      type: string
                    keyID:
                      description: KeyID is the KMS key ID to use for encryption.
                        Optional, buckets are encrypted by default on GCP. This allows
                        for the use of a custom encryption key.
                      type: string
                    projectID:
                      description: ProjectID is the Project ID of the GCP project
                        that this bucket should be associated with.
                      type: string
                    region:
                      description: Region is the GCS location in which your bucket
                        exists. Optional, will be set based on the installed GCS Region.
                      type: string
                  type: object
                pvc:
                  description: PVC represents configuration that uses a PersistentVolumeClaim.
                  properties:
                    claim:
                      type: string
                  type: object
                s3:
                  description: S3 represents configuration that uses Amazon Simple
                    Storage Service.
                  properties:
                    bucket:
                      description: Bucket is the bucket name in which you want to
                        store the registry's data. Optional, will be generated if
                        not provided.
                      type: string
                    cloudFront:
                      description: CloudFront configures Amazon Cloudfront as the
                        storage middleware in a registry.
                      properties:
                        baseURL:
                          description: BaseURL contains the SCHEME://HOST[/PATH] at
                            which Cloudfront is served.
                          type: string
                        duration:
                          description: Duration is the duration of the Cloudfront
                            session.
                          type: string
                        keypairID:
                          description: KeypairID is key pair ID provided by AWS.
                          type: string
                        privateKey:
                          description: PrivateKey points to secret containing the
                            private key, provided by AWS.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or it's key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      required:
                      - baseURL
                      - keypairID
                      - privateKey
                      type: object
                    encrypt:
                      description: Encrypt specifies whether the registry stores the
                        image in encrypted format or not. Optional, defaults to false.
                      type: boolean
                    keyID:
                      description: KeyID is the KMS key ID to use for encryption.
                        Optional, Encrypt must be true, or this parameter is ignored.
                      type: string
                    region:
                      description: Region is the AWS region in which your bucket exists.
                        Optional, will be set based on the installed AWS Region.
                      type: string
                    regionEndpoint:
                      description: RegionEndpoint is the endpoint for S3 compatible
                        storage services. Optional, defaults based on the Region that
                        is provided.
                      type: string
                  type: object
                swift:
                  description: Swift represents configuration that uses OpenStack
                    Object Storage. This configuration is EXPERIMENTAL and is subject
                    to change without notice.
                  properties:
                    authURL:
                      type: string
                    authVersion:
                      type: string
                    container:
                      type: string
                    domain:
                      type: string
                    domainID:
                      type: string
                    regionName:
                      type: string
                    tenant:
                      type: string
                    tenantID:
                      type: string
                  type: object
              type: object
            tolerations:
              description: Tolerations defines the tolerations for the registry pod.
              items:
                description: The pod this Toleration is attached to tolerates any
                  taint that matches the triple <key,value,effect> using the matching
                  operator <operator>.
                properties:
                  effect:
                    description: Effect indicates the taint effect to match. Empty
                      means match all taint effects. When specified, allowed values
                      are NoSchedule, PreferNoSchedule and NoExecute.
                    type: string
                  key:
                    description: Key is the taint key that the toleration applies
                      to. Empty means match all taint keys. If the key is empty, operator
                      must be Exists; this combination means to match all values and
                      all keys.
                    type: string
                  operator:
                    description: Operator represents a key's relationship to the value.
                      Valid operators are Exists and Equal. Defaults to Equal. Exists
                      is equivalent to wildcard for value, so that a pod can tolerate
                      all taints of a particular category.
                    type: string
                  tolerationSeconds:
                    description: TolerationSeconds represents the period of time the
                      toleration (which must be of effect NoExecute, otherwise this
                      field is ignored) tolerates the taint. By default, it is not
                      set, which means tolerate the taint forever (do not evict).
                      Zero and negative values will be treated as 0 (evict immediately)
                      by the system.
                    format: int64
                    type: integer
                  value:
                    description: Value is the taint value the toleration matches to.
                      If the operator is Exists, the value should be empty, otherwise
                      just a regular string.
                    type: string
                type: object
              type: array
          required:
          - logging
          - managementState
          - replicas
          type: object
        status:
          properties:
            conditions:
              description: conditions is a list of conditions and their status
              items:
                description: OperatorCondition is just the standard condition fields.
                properties:
                  lastTransitionTime:
                    format: date-time
                    type: string
                  message:
                    type: string
                  reason:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                type: object
              type: array
            generations:
              description: generations are used to determine when an item needs to
                be reconciled or has changed in a way that needs a reaction.
              items:
                description: GenerationStatus keeps track of the generation for a
                  given resource so that decisions about forced updates can be made.
                properties:
                  group:
                    description: group is the group of the thing you're tracking
                    type: string
                  hash:
                    description: hash is an optional field set for resources without
                      generation that are content sensitive like secrets and configmaps
                    type: string
                  lastGeneration:
                    description: lastGeneration is the last generation of the workload
                      controller involved
                    format: int64
                    type: integer
                  name:
                    description: name is the name of the thing you're tracking
                    type: string
                  namespace:
                    description: namespace is where the thing you're tracking is
                    type: string
                  resource:
                    description: resource is the resource type of the thing you're
                      tracking
                    type: string
                type: object
              type: array
            observedGeneration:
              description: observedGeneration is the last generation change you've
                dealt with
              format: int64
              type: integer
            readyReplicas:
              description: readyReplicas indicates how many replicas are ready and
                at the desired state
              format: int32
              type: integer
            storage:
              description: Storage indicates the current applied storage configuration
                of the registry.
              properties:
                azure:
                  description: Azure represents configuration that uses Azure Blob
                    Storage.
                  properties:
                    accountName:
                      type: string
                    container:
                      type: string
                  type: object
                emptyDir:
                  description: EmptyDir represents ephemeral storage on the pod's
                    host node. This storage cannot be used with more than 1 replica
                    and is not suitable for production use. When the pod is removed
                    from a node for any reason, the data in the emptyDir is deleted
                    forever. This configuration is EXPERIMENTAL and is subject to
                    change without notice.
                  type: object
                gcs:
                  description: GCS represents configuration that uses Google Cloud
                    Storage.
                  properties:
                    bucket:
                      description: Bucket is the bucket name in which you want to
                        store the registry's data. Optional, will be generated if
                        not provided.
                      type: string
                    keyID:
                      description: KeyID is the KMS key ID to use for encryption.
                        Optional, buckets are encrypted by default on GCP. This allows
                        for the use of a custom encryption key.
                      type: string
                    projectID:
                      description: ProjectID is the Project ID of the GCP project
                        that this bucket should be associated with.
                      type: string
                    region:
                      description: Region is the GCS location in which your bucket
                        exists. Optional, will be set based on the installed GCS Region.
                      type: string
                  type: object
                pvc:
                  description: PVC represents configuration that uses a PersistentVolumeClaim.
                  properties:
                    claim:
                      type: string
                  type: object
                s3:
                  description: S3 represents configuration that uses Amazon Simple
                    Storage Service.
                  properties:
                    bucket:
                      description: Bucket is the bucket name in which you want to
                        store the registry's data. Optional, will be generated if
                        not provided.
                      type: string
                    cloudFront:
                      description: CloudFront configures Amazon Cloudfront as the
                        storage middleware in a registry.
                      properties:
                        baseURL:
                          description: BaseURL contains the SCHEME://HOST[/PATH] at
                            which Cloudfront is served.
                          type: string
                        duration:
                          description: Duration is the duration of the Cloudfront
                            session.
                          type: string
                        keypairID:
                          description: KeypairID is key pair ID provided by AWS.
                          type: string
                        privateKey:
                          description: PrivateKey points to secret containing the
                            private key, provided by AWS.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or it's key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      required:
                      - baseURL
                      - keypairID
                      - privateKey
                      type: object
                    encrypt:
                      description: Encrypt specifies whether the registry stores the
                        image in encrypted format or not. Optional, defaults to false.
                      type: boolean
                    keyID:
                      description: KeyID is the KMS key ID to use for encryption.
                        Optional, Encrypt must be true, or this parameter is ignored.
                      type: string
                    region:
                      description: Region is the AWS region in which your bucket exists.
                        Optional, will be set based on the installed AWS Region.
                      type: string
                    regionEndpoint:
                      description: RegionEndpoint is the endpoint for S3 compatible
                        storage services. Optional, defaults based on the Region that
                        is provided.
                      type: string
                  type: object
                swift:
                  description: Swift represents configuration that uses OpenStack
                    Object Storage. This configuration is EXPERIMENTAL and is subject
                    to change without notice.
                  properties:
                    authURL:
                      type: string
                    authVersion:
                      type: string
                    container:
                      type: string
                    domain:
                      type: string
                    domainID:
                      type: string
                    regionName:
                      type: string
                    tenant:
                      type: string
                    tenantID:
                      type: string
                  type: object
              type: object
            storageManaged:
              description: StorageManaged is a boolean which denotes whether or not
                we created the registry storage medium (such as an S3 bucket).
              type: boolean
            version:
              description: version is the level this availability applies to
              type: string
          required:
          - storage
          - storageManaged
          type: object
      required:
      - metadata
      - spec
      type: object
