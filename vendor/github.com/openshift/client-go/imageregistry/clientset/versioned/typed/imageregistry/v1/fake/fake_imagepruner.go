// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/openshift/api/imageregistry/v1"
	imageregistryv1 "github.com/openshift/client-go/imageregistry/applyconfigurations/imageregistry/v1"
	typedimageregistryv1 "github.com/openshift/client-go/imageregistry/clientset/versioned/typed/imageregistry/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeImagePruners implements ImagePrunerInterface
type fakeImagePruners struct {
	*gentype.FakeClientWithListAndApply[*v1.ImagePruner, *v1.ImagePrunerList, *imageregistryv1.ImagePrunerApplyConfiguration]
	Fake *FakeImageregistryV1
}

func newFakeImagePruners(fake *FakeImageregistryV1) typedimageregistryv1.ImagePrunerInterface {
	return &fakeImagePruners{
		gentype.NewFakeClientWithListAndApply[*v1.ImagePruner, *v1.ImagePrunerList, *imageregistryv1.ImagePrunerApplyConfiguration](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("imagepruners"),
			v1.SchemeGroupVersion.WithKind("ImagePruner"),
			func() *v1.ImagePruner { return &v1.ImagePruner{} },
			func() *v1.ImagePrunerList { return &v1.ImagePrunerList{} },
			func(dst, src *v1.ImagePrunerList) { dst.ListMeta = src.ListMeta },
			func(list *v1.ImagePrunerList) []*v1.ImagePruner { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.ImagePrunerList, items []*v1.ImagePruner) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
